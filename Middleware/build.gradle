//import com.sun.org.apache.xalan.internal.xsltc.cmdline.Compile

apply plugin: 'com.android.library'
android {
    compileSdkVersion 19
    buildToolsVersion "22.0.1"

    defaultConfig {
//        applicationId "com.j"
        minSdkVersion 15
        targetSdkVersion 19
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
//            runProguard false
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }


    repositories {
        flatDir {
            dirs 'Middleware/libss'
        }
    }

}

//task copyNativeLibs(type: Copy) {
//    from fileTree(dir: 'libs', include: 'armeabi/*.so') into 'build/lib'
//}
//tasks.withType(Compile) {
//    compileTask -> compileTask.dependsOn copyNativeLibs
//}
//clean.dependsOn 'cleanCopyNativeLibs'
//tasks.withType(com.android.build.gradle.tasks.PackageApplication) { pkgTask ->
//    pkgTask.jniFolders = [new File(buildDir, 'lib')]
//}

//定义一个函数，target是生成jar包的文件名，classDir是class文件所在的文件夹
def makeJar(String target, String classDir) {
    exec {
        executable "jar"   //调用jar
        args "cvf", target
        args "-C", classDir
        args "", "."
    }
}

//新建一个task,名为buildLib,依赖build(build是一个自带的task)
task buildMiddlewareJar(dependsOn: ['build']) << {
    makeJar("middleware.jar", "build/intermediates/classes/release")
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:support-v4:22.2.0'
    compile project(':lib-manipulation')
    compile project(':lib-core')
    compile project(':lib-core-slh')
//
//    compile(name: 'lib-core-release', ext: 'aar')
//    compile(name: 'lib-core-slh-release', ext: 'aar')
//    compile(name: 'lib-manipulation-release', ext: 'aar')

}
